# # Строки
#
# # ord() - переводит символ в его числовое представление.
# # Получает на вход - str, в виде одного символа.
# # Возвращает - int.
# print(ord('Q'))
# print('-' * 15)
#
# # chr() - переводит число в его символьное представление.
# # Получает на вход - int.
# # Возвращает - str, в виде его int.
# print(chr(81))
# print('-' * 15)

# print(chr(9998))
# print(chr(9996))
# print(chr(9989))
# print(chr(9982))
# print(chr(9979))
# print(chr(9912))
# print(chr(9902))
# print('-' * 15)

# # Задача 1
# inp = ord(input())
# num = ord('A') - ord('a')
# print(chr(inp + num) if num > 0 else chr(inp - num))
# print('-' * 15)

# # Экранирование
# # \ - Символ экранирования (отключает обратные связки - \n - переход на другую строку, \r - возврат корретки, \t - табуляция (большой отступ.).
# print('\\n')
# print('C:\\ru')
# # r'' - сырые строки, в которых не работают спец связки.
# print(r'C:\ru\pul\ref\file.txt') # - сырая строка.
# print('-' * 15)

# # Работа с индексами. Срезы.
# # Элементы в строках всегда нумеруются с нуля слева направо.
# # Обратная нумерация - справа налево от -1.
# data = 'Hello, world!'
# print(data[0:5])
# print(data[7:-1])
# print(data[7:])
# print(data[:5])
# print(data[::2])

# # Срезы.
# # s[n:m:k]
# # s - имя переменной строкового типа;
# # n - int, начало среза;
# # m - int, конец среза (НЕ ВКЛЮЧИТЕЛЬНО);
# # k - int, шаг среза;
# data2 = '123456789'
# print(data2[::2])
# # Все нечётные числа. (каждый второй символ с 0 позиции)
# print(data2[1::2])
# # Все чётные числа. (каждый второй символ с 1 позиции)
# print(data2[2::3])
# # Все числа кратные 3. (каждый третий символ со 2 позиции)
# print(data2[-5:-2])
# # От -5 позиции до -2 позиции.
# print(data2[::-1])
# # Переворачивает строку.
# print(data2[::-2])
# # Каждый второй символ с шагом в 2.
# print('-' * 15)

# # Задача 2.
inp = input('Введите слово: ')
if inp[::-1] == inp:
    print('Это палиндром.')
else:
    print('Это не палиндром.')
# print('-' * 15)
